#include <iostream>
using namespace std;

struct queue {
    int inf;
    queue* next;
};

void push(queue*& h, queue*& t, int x) { //вставка элемента в очередь
    queue* r = new queue; //создаем новый элемент
    r->inf = x;
    r->next = NULL; //всегда последний
    if (!h && !t) { //если очередь пуста
        h = t = r; //это и голова и хвост
    }
    else {
        t->next = r; //r - следующий для хвоста
        t = r; //теперь r - хвост
    }
}

int pop(queue*& h, queue*& t) { //удаление элемента из очереди
    queue* r = h; //создаем указатель на голову
    int i = h->inf; //сохраняем значение головы
    h = h->next; //сдвигаем указатель на следующий элемент
    if (!h) //если удаляем последний элемент из очереди
        t = NULL;
    delete r; //удаляем первый элемент
    return i;
}

int max(queue*& h, queue*& t) {
    queue* head1 = NULL;
    queue* tail1 = NULL;
    int max_el = h->inf;
    int el;
    while (h || t) {
        el = pop(h, t);
        if (el > max_el) {
            max_el = el;
        }
        push(head1, tail1, el);
    }
    h = head1;
    t = tail1;
    return max_el;
}

int min(queue*& h, queue*& t) {
    queue* head1 = NULL;
    queue* tail1 = NULL;
    int min_el = h->inf;
    int el;
    while (h || t) {
        el = pop(h, t);
        if (el < min_el) {
            min_el = el;
        }
        push(head1, tail1, el);
    }
    h = head1;
    t = tail1;
    return min_el;
}

void task(queue*& h, queue*& t, int max_el, int min_el) {
    queue* head1 = NULL;
    queue* tail1 = NULL;

    while (h || t) {
        int el = pop(h, t);
        if (el == max_el) {
            push(head1, tail1, min_el);
        }
        push(head1, tail1, el);
    }
    h = head1;
    t = tail1;
}

int main()
{
    queue* head = NULL;
    queue* tail = NULL;
    int n; //кол-во элементов 
    cout << "Enter n: ";
    cin >> n;
    cout << endl;
    int input; //переменная для ввода
    for (int i = 0; i < n; i++) {
        cin >> input;
        push(head, tail, input);
    }

    int max_el = max(head, tail);
    int min_el = min(head, tail);
    task(head, tail, max_el, min_el);

    while (head || tail) {
        cout << pop(head, tail) << ' ';
    }
    return 0;
}